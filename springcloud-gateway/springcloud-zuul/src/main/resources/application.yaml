server:
  port: 9210
  servlet:
    context-path: /
  http2:
    enabled: false
  tomcat:
    accept-count: 100
    max-connections: 200
    min-spare-threads: 15
    max-threads: 200
spring:
  application:
    name: springcloud-gateway
  redis:
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms
    cluster:
      nodes: 10.101.70.158:7000,10.101.70.158:7001,10.101.70.158:7002,10.101.70.158:7003,10.101.70.158:7004,10.101.70.158:7005

zuul:
  include:
    debug:
      header: true
  debug:
    request: true
    parameter: debugRequest
  retryable: false    #关闭重试
  sensitiveHeaders: Access-Control-Allow-Origin,Access-Control-Allow-Methods
  custom-sensitive-headers: true #http://blog.didispace.com/spring-cloud-zuul-cookie-redirect/ zuul授权码跳转问题
  add-host-header: true
  host:
    connect-timeout-millis: 60000
    max-per-route-connections: 200
    max-total-connections: 200
    socket-timeout-millis: 60000
  ribbon:
    eager-load:
      enabled: true
    ribbonIsolationStrategy: THREAD
    semaphore:
      maxSemaphores: 1000

#设置最大超时时间
ribbon:
  httpclient:
    enabled: false
  okhttp:
    enabled: true
  ReadTimeout: 90000
  ConnectTimeout: 90000

#熔断配置
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 90000


eureka:
  instance:
    hostname: ${hostname:localhost}
    preferIpAddress: true
    #租期更新时间间隔（默认30秒）
    leaseRenewalIntervalInSeconds: 10
    #租期到期时间（默认90秒）
    leaseExpirationDurationInSeconds: 30
    statusPageUrlPath: /swagger-ui.html
  client:
    serviceUrl:
      # 向每个注册中心注册
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
    #开启健康检查（需要spring-boot-starter-actuator依赖）
    healthcheck:
      enabled: true
    eurekaServiceUrlPollIntervalSeconds: 60
    # 是否从eureka上获取注册信息
    fetch-registry: true
#  如果项目配置有 server.servlet.context-path 属性，想要被 spring boot admin 监控，就要配置以下属性
#    metadata-map:
#      management:
#        context-path: ${server.servlet.context-path}/actuator
#    health-check-url: http://localhost:${server.port}${server.servlet.context-path}/actuator/health
#    status-page-url: http://localhost:${server.port}${server.servlet.context-path}/actuator/info
#    home-page-url: http://localhost:${server.port}/


management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS

security:
  oauth2:
    token:
      store:
        type: redis


permit:
  http_urls:  /test163/** , /api-auth/** , /health ,/doc.html,/test111 ,/api-user/users-anon/login ,/user-center/users-anon/login,/document.html,**/v2/api-docs
  oauth_urls: /test163/** , /api-auth/** , /doc.html ,/test111 ,/api-user/users-anon/login,/user-center/users-anon/login,/document.html,**/v2/api-docs

